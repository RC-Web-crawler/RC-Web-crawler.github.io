<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Text Mining on Web Crawler</title>
    <link>https://rc-web-crawler.github.io/2nd_home/</link>
    <description>Recent content in Text Mining on Web Crawler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://rc-web-crawler.github.io/2nd_home/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Keyword Analysis</title>
      <link>https://rc-web-crawler.github.io/2nd_home/5_keyword/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rc-web-crawler.github.io/2nd_home/5_keyword/</guid>
      <description>2.1.1 Purpose In this section, we will use text mining methods to derive information from the text of keywords. We explore the frequency, coverage, and the relationship between keywords, therefore identifying keywords which are important for our further analysis and model building.
2.1.2 Pre-prepare: install R packages and import data library(knitr)library(readxl)library(tidyverse)library(tidytext)library(igraph)library(ggraph)library(textstem)library(RSQLite)library(plotly)data &amp;lt;- read_excel(&amp;quot;~/Downloads//paper_keyword.xlsx&amp;quot;) 2.1.3 Data transformation 2.1.3.1 Keyword cleaning We transform the data into a tibble (tibbles are a modern take on data frames) and add the row number with the column name ‘document’.</description>
    </item>
    
    <item>
      <title>Content Analysis</title>
      <link>https://rc-web-crawler.github.io/2nd_home/6_content/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rc-web-crawler.github.io/2nd_home/6_content/</guid>
      <description>Title Analysis: Keyword Prediction Although most of the articles have keywords with them, there are still quite a lot of articles without keywords. Meanwhile, some articles may have complicated keywords, which could also increase the difficulty of analysis. To solve this problem, we can try to predict the keywords with title analysis techniques.
In the following parts, the keyword prediction using the results from previous keyword analysis is demonstrated. The whole workflow is shown below:</description>
    </item>
    
    <item>
      <title>eCRF Index Shiny App</title>
      <link>https://rc-web-crawler.github.io/2nd_home/7_shiny/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rc-web-crawler.github.io/2nd_home/7_shiny/</guid>
      <description>Instruction Users could upload the eCRF pdf file using new template to get the index for eCRF forms and map with SDTM domains. According to alpha test results, the coverage rate is 70% ~ 85% and the accuracy rate is 85% ~ 100%.
Limitation As expected, mapping results for efficacy-related domains, like QS, ZW, are low in accuracy and coverage, since their eCRF forms are always study specific forms</description>
    </item>
    
  </channel>
</rss>
